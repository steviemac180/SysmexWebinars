vline <- qc_long %>% group_by(name) %>%
summarise(mean = mean(value))
qc_long %>%  ggplot(aes(value)) +
geom_histogram(color="lightblue",fill = "lightblue", bins = 10) +
facet_wrap(~name, scales = "free") +
geom_vline(data = vline, aes(xintercept = mean), colour="black") +
theme_light()
qc_long %>%  ggplot(aes(value)) +
geom_histogram(color="lightblue",fill = "lightblue", bins = 10) +
facet_wrap(~name, scales = "free") +
geom_vline(data = vline, aes(xintercept = mean), colour="black") +
coord_flip() +
theme_light()
qc_data
qc_data %>%
ggplot(aes(level_1, level_2)) +
geom_point()
library(reticulate)
install.packages(reticulate)
install.packages("reticulate")
install.packages(reticulate)
library(reticulate)
qc_data %>%
ggplot(aes(level_1, level_2)) +
geom_point()
qc_long
xboxplot <-   qc_long %>%
ggplot(aes(name, value)) +
geom_boxplot() +
facet_wrap(~name)
xboxplot
xboxplot <-   qc_long %>%
ggplot(aes(name, value)) +
geom_boxplot() +
facet_wrap(~name, scales = "free" +
coord_flip())
xboxplot
xboxplot <-   qc_long %>%
ggplot(aes(name, value)) +
geom_boxplot() +
facet_wrap(~name, scales = "free") +
coord_flip()
xboxplot
xboxplot <-   qc_long %>%
ggplot(aes(name, value)) +
geom_boxplot() +
coord_flip()
xboxplot
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(DT)
library(reticulate)
## randoml generate 100 points mean = 15, sd = 1
level_1 <- round(rnorm(100,1.5,0.05),2)
level_2 <- round(rnorm(100,4,0.2),2)
level_3 <- round(rnorm(100,8,0.4),2)
head(level_1)
head(level_2)
qc_data <- data.frame(cbind(level_1,level_2, level_3))
data_table <- DT::datatable(qc_data)
data_table
str(qc_data)
qc_long <- qc_data %>%
pivot_longer(1:3)
vline <- qc_long %>% group_by(name) %>%
summarise(mean = mean(value))
qc_long %>%  ggplot(aes(value)) +
geom_histogram(color="lightblue",fill = "lightblue", bins = 10) +
facet_wrap(~name, scales = "free") +
geom_vline(data = vline, aes(xintercept = mean), colour="black") +
theme_light()
qc_data %>%
ggplot(aes(level_1, level_2)) +
geom_point()
qc_long %>%
ggplot(aes(name, value)) +
geom_boxplot() +
coord_flip()
# sd <- sd(qc_data)
# mean(qc_data)
# sd(qc_data)
#
# hist(qc_data, breaks = 15)
# abline(v=mean(qc_data)+(1.96*sd), col="red")
# abline(v=mean(qc_data)-(1.96*sd), col="red")
### Title
sample(10, dnorm(15,0.1))
sample(10, dnorm(15,0.1))
rnorm(2, 15, 5)
sd(rnorm(2, 15, 5))
sd(rnorm(20, 15, 5))
sd(rnorm(200, 15, 5))
sd(rnorm(2e6, 15, 5))
source('~/Dropbox/1. Stephen/ R Projects/SysmexWebinars/func.R')
shiny::runApp()
plot_pois <- function(df) {
if (is.null(df)) return(ggplot() + theme_bw())
if (length(unique(df$n)) == 1 && unique(df$n) == 1) {
# all N are 1
df1 <- df %>%
group_by(lambda) %>%
mutate(Sample = paste0("rpois(", n(), ", ", lambda, ")")) %>%
ungroup()
} else {
df1 <- df %>%
mutate(Sample = paste0(LETTERS[sample - min(sample) + 1],
": rpois(", n, ", ", lambda, ")"))
}
ncolumns <- ceiling(length(unique(df1$Sample))/5)
ggplot(df1, aes(x, fill = Sample)) +
geom_histogram(binwidth = 1, color = "black", alpha = 0.2,
position = position_dodge(), show.legend = FALSE) +
scale_x_continuous(
breaks = 0:max(df1$x),
limits = c(-0.5, max(df1$x) + 0.5)
) +
facet_wrap(~Sample, ncol = ncolumns, dir = "v") +
theme_bw()
}
source('~/Dropbox/1. Stephen/ R Projects/SysmexWebinars/func.R')
runApp()
runApp()
library(tidyverse)
library(broom)
plot(carat, proce, data = diamonds)
plot(Carat, proce, data = diamonds)
View(diamonds)
plot(diamonds$carat, diamonds$price)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
qc <- read_csv('QC_data.csv')
getwd()
qc <- read_csv('QC.csv')
head(qc)
qc %>%
select(contains"MCV")
select(contains(MCV(fl))
qc %>%
getwd()
qc <- read_csv('QC.csv')
qc %>% select(contains(MCV(fl)))
qc %>% select(contains("MCV(fl)"))
library(DT)
getwd()
qc <- read_csv('QC.csv')
datatable(qc)
qc %>% select(contains("MCV(fl)"))
qc %>% select("Sample No.", contains("MCV(fl)"))
qc %>% select(Date, "Sample No.", contains("MCV(fl)"))
qc %>% select(Date, "Sample No.", contains("MCV(fl)")) %>%
ggplot(Date, MCV(fl)) +
geom_line()
qc %>% select(Date, "Sample No.", contains("MCV(fl)")) %>%
ggplot(aes(Date, MCV(fl))) +
geom_line()
qc %>% select(Date, "Sample No.", contains("MCV(fl)")) %>%
ggplot(aes(Date, "MCV(fl)")) +
geom_line()
qc %>% select(Date, "Sample No.", contains("MCV(fl)")) %>%
ggplot(aes(Date, "MCV(fl)", color="Sample.No")) +
geom_line()
qc %>% select(Date, "Sample No.", contains("MCV(fl)")) %>%
ggplot(aes(Date, "MCV(fl)")) +
geom_line() +
facet_wrap(~"Sample.No")
library(lubridate)
qc %>% select(as.Date(Date), "Sample No.", contains("MCV(fl)")) %>%
ggplot(aes(Date, "MCV(fl)")) +
geom_line() +
facet_wrap(~"Sample.No")
qc %>% select(as.Date(Date), "Sample No.", contains("MCV(fl)"))
qc %>% select(Date, "Sample No.", contains("MCV(fl)"))
qc %>% select(Date, Time, "Sample No.", contains("MCV(fl)"))
qc$date_time = dmy_hm(paste(qc$date, qc$time))
qc$date_time = mdy_hm(paste(qc$date, qc$time))
qc$date_time = mdy_hm(paste(qc$Date, qc$Time))
qc
qc %>% select(date_time, "Sample No.", contains("MCV(fl)"))
qc
qc <- read_csv('QC.csv')
qc$date_time = mdy_hms(paste(qc$Date, qc$Time))
qc %>% select(date_time, "Sample No.", contains("MCV(fl)"))
qc %>% select(date_time, "Sample No.", contains("MCV(fl)")) %>%
ggplot(aes(Date, "MCV(fl)")) +
geom_line() +
facet_wrap(~"Sample.No")
qc %>% select(date_time, "Sample No.", contains("MCV(fl)")) %>%
ggplot(aes(date_time, "MCV(fl)")) +
geom_line() +
facet_wrap(~"Sample.No")
qc %>% select(date_time, "Sample No.", contains("MCV(fl)")) %>%
ggplot(aes(date_time, "MCV(fl)")) +
geom_point() +
facet_wrap(~"Sample.No")
qc %>% select(date_time, as.factor("Sample No."), contains("MCV(fl)")) %>%
ggplot(aes(date_time, "MCV(fl)")) +
geom_point() +
facet_wrap(~"Sample.No")
qc %>% select(date_time, as.factor("Sample No."), contains("MCV(fl)"))
qc %>% count(SampleNo., sort = TRUE)
qc %>% count("SampleNo.", sort = TRUE)
qc %>% count(as.factor("SampleNo."), sort = TRUE)
qc %>% count(Analyser, sort = TRUE)
qc %>% count(Analyser, Sample.No, sort = TRUE)
qc %>% count(Analyser, "Sample.No", sort = TRUE)
qc$Sample.No <- as.factor("Sample.No")
qc %>% count(Analyser, "Sample.No", sort = TRUE)
qc %>% count(Analyser, Sample.No, sort = TRUE)
qc
qc$Sample.No <- as.factor("Sample No.")
qc %>% count(Analyser, Sample.No, sort = TRUE)
qc %>% count(Analyser, "Sample No.", sort = TRUE)
qc
qc$Sample.No <- as.factor("Sample No.")
summary(qc)
qc %>%
selc(1:90) %>%
pivot_longer(Parameter, Value, 6:90)
qc %>%
select(1:90) %>%
pivot_longer(Parameter, Value, 6:90)
qc %>%
select(1:90) %>%
pivot_longer(6:90, names_to = "Parameter", cols_to = "Value")
qc %>%
select(1:90) %>%
pivot_longer(6:90, names_to = "Parameter", values_to = "Result")
qc %>%
select(1:90, -5) %>%
pivot_longer(6:90, names_to = "Parameter", values_to = "Result")
qc
qc_long <- qc %>%
select(1:90) %>%
pivot_longer(6:90, names_to = "Parameter", values_to = "Result")
qc_long
tail(qc_long)
qc_long <- qc %>%
select(1:90) %>%
pivot_longer(6:90, names_to = "Parameter", values_to = "Result") %>%
rename(qc = "Sample No.")
tail(qc_long)
qc %>%
select(1:90) %>%
pivot_longer(6:90, names_to = "Parameter", values_to = "Result")
qc %>%
select(1:90) %>%
pivot_longer(6:90, names_to = "Parameter", values_to = "Result") %>%
rename(qc = "Sample No.")
qc_long <- qc %>%
select(1:90) %>%
pivot_longer(6:90, names_to = "Parameter", values_to = "Result") %>%
rename(qc = "Sample No.")
tail(qc_long)
qc_long %>% count(Parameter)
qc_long %>% count(Parameter, sort=true)
qc_long %>% count(Parameter, sort=True)
qc_long %>% count(Parameter, sort=TRUE  )
qc_long %>% count(Parameter, qc, sort=TRUE  )
qc_long %>% count(qc, sort=TRUE  )
qc_long
qc_long %>%
group_by(Parameter) %>%
summarise(mean = mean(Result))
qc_long %>%
group_by(Parameter) %>%
summarise(mean = mean(Result), min = min(Result), max = max(Result), sd = sd(Result ))
qc_long %>%
group_by(Parameter, qc) %>%
summarise(mean = mean(Result), min = min(Result), max = max(Result), sd = sd(Result ))
qc_long %>%
group_by(Parameter, qc) %>%
summarise(mean = mean(Result), min = min(Result), max = max(Result), sd = sd(Result )) %>%
datatable()
qc_long %>%
group_by(Parameter, qc) %>%
summarise(mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = sd(Result )) %>%
datatable()
summarise(mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = round(sd(Result ),2) %>%
qc_long %>%
group_by(Parameter, qc) %>%
summarise(mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = round(sd(Result),2)) %>%
datatable()
qc_long %>%
group_by(Parameter, qc) %>%
summarise(mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = round(sd(Result),2))
qc_long %>%
group_by(Parameter, qc) %>%
summarise(mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = round(sd(Result),2)) %>%
datatable()
qc_long %>%
group_by(Analyser, Parameter, qc) %>%
summarise(mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = round(sd(Result),2)) %>%
datatable()
qc_long %>%
group_by(Analyser, Parameter, qc) %>%
summarise(mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = round(sd(Result),2),
CV = sd/mean) %>%
datatable()
qc_long %>%
group_by(Analyser, Parameter, qc) %>%
summarise(mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = round(sd(Result),2),
CV = round(sd/mean)/100),2) %>%
qc_long %>%
group_by(Analyser, Parameter, qc) %>%
summarise(mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = round(sd(Result),2),
CV = round(sd/mean/100),2) %>%
datatable()
qc_long %>%
group_by(Analyser, Parameter, qc) %>%
summarise(mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = round(sd(Result),2),
CV = round((sd/mean)*100),2) %>%
datatable()
qc_long %>%
group_by(Analyser, Parameter, qc) %>%
summarise(mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = round(sd(Result),2),
CV = sd/mean*100) %>%
datatable()
qc_long %>%
group_by(Analyser, Parameter, qc) %>%
summarise(mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = round(sd(Result),2),
CV = round(sd/mean*100),2) %>%
datatable()
qc_long %>%
group_by(Analyser, Parameter, qc) %>%
summarise(mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = round(sd(Result),2),
CV = round((sd/mean)*100),2) %>%
datatable()
CV = (sd/mean)*100 %>%
qc_long %>%
group_by(Analyser, Parameter, qc) %>%
summarise(mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = round(sd(Result),2),
CV = (sd/mean)*100) %>%
datatable()
qc_long %>%
group_by(Analyser, Parameter, qc) %>%
summarise(mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = round(sd(Result),2),
CV = sd/mean*100) %>%
datatable()
qc_long %>%
group_by(Analyser, Parameter, qc) %>%
summarise(mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = round(sd(Result),2),
CV = round(sd/mean*100),2) %>%
datatable()
qc_long %>%
group_by(Analyser, Parameter, qc) %>%
summarise(mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = round(sd(Result),2),
CV = sd/mean*100) %>%
datatable()
qc_long %>%
group_by(Analyser, Parameter, qc) %>%
summarise(mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = round(sd(Result),2),
CV = sd/mean*100) %>%
datatable()
summary(qc_long)
qc %>%
select(1:90) %>% summary()
qc %>%
select(1:90) %>%
group_by(qc) %>%
summary()
qc
qc %>%
select(1:90) %>%
group_by(`Sample No.`) %>%
summary()
qc_long %>%
group_by(Analyser, Parameter, qc) %>%
summarise(count = n(), mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = round(sd(Result),2),
CV = sd/mean*100) %>%
datatable()
library(tidyverse)
library(DT)
library(lubridate)
qc <- read_csv('QC.csv')
qc$Sample.No <- as.factor("Sample No.")
datatable(qc)
qc <- read_csv('QC.csv')
qc$Sample.No <- as.factor("Sample No.")
datatable(qc)
qc$date_time = mdy_hms(paste(qc$Date, qc$Time))
qc_long <- qc %>%
select(1:90) %>%
pivot_longer(6:90, names_to = "Parameter", values_to = "Result") %>%
rename(qc = "Sample No.")
qc_long %>% count(qc, sort=TRUE  )
qc %>%
select(1:90) %>%
group_by(`Sample No.`) %>%
summary()
qc_long %>%
group_by(Analyser, Parameter, qc) %>%
summarise(count = n(), mean = round(mean(Result),2), min = min(Result), max = max(Result), sd = round(sd(Result),2),
CV = sd/mean*100) %>%
datatable()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(infer)
install.package("infer")
install.packages("infer")
library(infer)
library(broom)
inference_data <- read_csv("QC.csv")
inference_data %>%
select(`WBC(10^9/L)`)
inference_data %>%
select(`PLT(10^9/L)`,`WBC(10^9/L)`)
inference_data %>%
select(Analyser,`PLT(10^9/L)`,`WBC(10^9/L)`)
inference_data %>%
select(Analyser,`PLT(10^9/L)`,`WBC(10^9/L)`) %>%
specify(response=`WBC(10^9/L)`)
inference_data %>%
select(Analyser,`PLT(10^9/L)`,`WBC(10^9/L)`) %>%
specify(response=`WBC(10^9/L)`) %>%
calculate(stat="mean")
wbc_mean <- inference_data %>%
select(Analyser,`PLT(10^9/L)`,`WBC(10^9/L)`) %>%
specify(response=`WBC(10^9/L)`) %>%
calculate(stat="mean")
null_distn <- inference_data %>%
specify(response=`WBC(10^9/L)`) %>%
hypothesize(null = "point", mu = 6) %>%
generate(reps = 1000) %>%
calculate(stat = "mean")
visualize(null_distn) +
shade_p_value(obs_stat = x_bar, direction = "two-sided")
visualize(null_distn) +
shade_p_value(obs_stat = wbc_mean, direction = "two-sided")
visualize(null_distn) +
shade_p_value(obs_stat = wbc_mean, direction = "two-sided")
visualize(null_distn) +
shade_p_value(obs_stat = wbc_mean, direction = "two-sided")
null_distn <- inference_data %>%
specify(response=`WBC(10^9/L)`) %>%
hypothesize(null = "point", mu = 8) %>%
generate(reps = 1000) %>%
calculate(stat = "mean")
visualize(null_distn) +
shade_p_value(obs_stat = wbc_mean, direction = "two-sided")
null_distn %>%
get_p_value(obs_stat = wbc_mean, direction = "two-sided")
visualize(null_distn)
inference_data <- read_csv("QC.csv")
inference_data <- read_csv("QC.csv")
df_qc <- inference_data %>%
select(Analyser,`PLT(10^9/L)`,`WBC(10^9/L)`)
library(DT)
datatable(df_qc)
inference_data
df_qc <- inference_data %>%
select(Analyser,`PLT(10^9/L)`,`WBC(10^9/L)`) %>%
filter(`Sample No.` == QC-10061101)
df_qc <- inference_data %>%
select(Analyser,`PLT(10^9/L)`,`WBC(10^9/L)`) %>%
filter(`Sample No.` == "QC-10061101")
df_qc <- inference_data %>%
select(Analyser,`Sample No.`, `PLT(10^9/L)`,`WBC(10^9/L)`) %>%
filter(`Sample No.` == "QC-10061101")
datatable(df_qc)
df_qc <- inference_data %>%
select(Analyser,`Sample No.`, `PLT(10^9/L)`,`WBC(10^9/L)`) %>%
filter(`Sample No.` == "QC-10061101", Analyser == XN2)
df_qc <- inference_data %>%
select(Analyser,`Sample No.`, `PLT(10^9/L)`,`WBC(10^9/L)`) %>%
filter(`Sample No.` == "QC-10061101", Analyser == "XN2")
datatable(df_qc)
specify(response=`WBC(10^9/L)`) %>%
calculate(stat="mean")
df_qc %>%
specify(response=`WBC(10^9/L)`) %>%
calculate(stat="mean")
mean_null_distn <- df_qc %>%
specify(response=`WBC(10^9/L)`) %>%
hypothesize(null = "point", mu = 2.6) %>%
generate(reps = 1000) %>%
calculate(stat = "mean")
visualize(mean_null_distn)
View(mean_null_distn)
visualize(mean_null_distn) +
shade_p_value(obs_stat = df_qc, direction = "two-sided")
wbc_mean <- df_qc %>%
specify(response=`WBC(10^9/L)`) %>%
calculate(stat="mean")
visualize(mean_null_distn) +
shade_p_value(obs_stat = wbc_mean, direction = "two-sided")
mean_null_distn <- df_qc %>%
specify(response=`WBC(10^9/L)`) %>%
hypothesize(null = "point", mu = 2.85) %>%
generate(reps = 1000) %>%
calculate(stat = "mean")
visualize(mean_null_distn)
visualize(mean_null_distn) +
shade_p_value(obs_stat = wbc_mean, direction = "two-sided")
mean_null_distn <- df_qc %>%
specify(response=`WBC(10^9/L)`) %>%
hypothesize(null = "point", mu = 2.95) %>%
generate(reps = 1000) %>%
calculate(stat = "mean")
visualize(mean_null_distn)
visualize(mean_null_distn) +
shade_p_value(obs_stat = wbc_mean, direction = "two-sided")
null_distn %>%
get_p_value(obs_stat = wbc_mean, direction = "two-sided")
mean_null_distn %>%
get_p_value(obs_stat = wbc_mean, direction = "two-sided")
mean_null_distn %>%
get_p_value(obs_stat = wbc_mean, direction = "one-sided")
mean_null_distn %>%
get_p_value(obs_stat = wbc_mean, direction = "right")
visualize(mean_null_distn) +
shade_p_value(obs_stat = wbc_mean, direction = "right")
